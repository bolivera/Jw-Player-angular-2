function fbs_share_click(e, i, n) {
    var a, o, l = "status=no,height=" + i + ",width=" + e + ",resizable=yes,left=" + (a = window.screen.width / 2 - (e / 2 + 10)) + ",top=" + (o = window.screen.height / 2 - (i / 2 + 50)) + ",screenX=" + a + ",screenY=" + o + ",toolbar=no,menubar=no,scrollbars=no,location=no,directories=no";
    return t = document.title, window.open("https://www.facebook.com/sharer/sharer.php?u=" + encodeURIComponent(n) + "&t=" + encodeURIComponent(t), "sharer", l), !1
}

function tws_share_click(e, i, n) {
    var a, o, l = "status=no,height=" + i + ",width=" + e + ",resizable=yes,left=" + (a = window.screen.width / 2 - (e / 2 + 10)) + ",top=" + (o = window.screen.height / 2 - (i / 2 + 50)) + ",screenX=" + a + ",screenY=" + o + ",toolbar=no,menubar=no,scrollbars=no,location=no,directories=no";
    return t = document.title, window.open("https://twitter.com/home?status=" + encodeURIComponent(t + " " + n), "sharer", l), !1
}

function ggp_share_click(e, i, n) {
    var a, o, l = "status=no,height=" + i + ",width=" + e + ",resizable=yes,left=" + (a = window.screen.width / 2 - (e / 2 + 10)) + ",top=" + (o = window.screen.height / 2 - (i / 2 + 50)) + ",screenX=" + a + ",screenY=" + o + ",toolbar=no,menubar=no,scrollbars=no,location=no,directories=no";
    return t = document.title, window.open("https://plus.google.com/share?url=" + encodeURIComponent(n + "&title=" + t), "sharer", l), !1
}

function getParameterByNameInHash(e, i) {
    e = e.replace(/[\[\]]/g, "\\$&");
    var n = new RegExp("[#&]" + e + "(=([^&#]*)|&|#|$)").exec(i);
    return n ? n[2] ? decodeURIComponent(n[2].replace(/\+/g, " ")) : "" : null
}

function formatYoutubePublishTime(e) {
    return formatFriendlyTime(new Date(e).getTime())
}

function calculateYoutubeDuration(e) {
    for (var i = 0, n = e.match(/(\d+\w)/gi), t = 0; t < n.length; t++) n[t].search("H") >= 0 && (i += 60 * parseInt(n[t]) * 60), n[t].search("M") >= 0 && (i += 60 * parseInt(n[t])), n[t].search("S") >= 0 && (i += parseInt(n[t]));
    return i
}

function setupAnalytics() {
    $(document).find("a").each(function(e, i) {
        var n = $(i).attr("href");
        null != n && (n.startsWith("/") || n.startsWith("http://") || n.startsWith("https://")) && !n.startsWith("/channel/") && n.indexOf(".html") >= 0 && n.indexOf("cvf=1") < 0 && (-1 == n.indexOf("#") ? $(i).attr("href", n + "#cvf=1") : $(i).attr("href", n + "&cvf=1"))
    }), $("*[zone-id]").each(function(e, i) {
        var n = $(i).find("article a"),
            t = $(i).attr("zone-id");
        if (t)
            for (var a = 0; a < n.length; a++) {
                var o = n.eq(a).attr("href");
                o && o.indexOf("#") >= 0 ? n.eq(a).attr("href", o + "&zone=" + t) : n.eq(a).attr("href", o + "#zone=" + t)
            }
    }), $("#div_PlaylistUpdated").find("article").each(function(e, i) {
        var n = $(i).find(".thumbnail a").attr("href");
        n.indexOf("recently-update=1") < 0 && (n.indexOf("#") >= 0 ? $(i).find(".thumbnail a").attr("href", n + "&recently-update=1") : $(i).find(".thumbnail a").attr("href", n + "#recently-update=1"))
    }), $("#div_PlaylistAdded").find("article").each(function(e, i) {
        var n = $(i).find(".thumbnail a").attr("href");
        n.indexOf("just-added=1") < 0 && (n.indexOf("#") >= 0 ? $(i).find(".thumbnail a").attr("href", n + "&just-added=1") : $(i).find(".thumbnail a").attr("href", n + "#just-added=1"))
    }), $(document).find(".wrapcontent article").each(function(e, i) {
        var n = $(i).find(".title a").text().replace(/ /g, "").replace(/[^a-zA-Z ]/g, "-");
        $(i).find(".vf-mainofgenres a").each(function(e, i) {
            var t = $(i).attr("href");
            t.indexOf("genre=" + n) < 0 && (t.indexOf("#") >= 0 ? $(i).attr("href", t + "&genre=" + n) : $(i).attr("href", t + "#genre=" + n))
        })
    });
    var e = $("#highlightartists").find("article"),
        i = $(document).find(".name-title h1").text().replace(/ /g, "");
    e.each(function(e, n) {
        var t = $(n).find("a").attr("href");
        t.indexOf("genre=" + i) < 0 && i && (t.indexOf("#") >= 0 ? $(n).find("a").attr("href", t + "&genre=" + i) : $(n).find("a").attr("href", t + "#genre=" + i))
    }), $("#birthdayartists").find("article").each(function(e, n) {
        var t = $(n).find("a").attr("href");
        t.indexOf("birthday=" + i) < 0 && i && (t.indexOf("#") >= 0 ? $(n).find("a").attr("href", t + "&birthday=" + i) : $(n).find("a").attr("href", t + "#birthday=" + i))
    }), $("#toptracks").find("article").each(function(e, n) {
        var t = $(n).find("a").attr("href");
        if (t.indexOf("highlights=" + i) < 0 && i) t.indexOf("#") >= 0 ? $(n).find("a").attr("href", t + "&highlights=" + i) : $(n).find("a").attr("href", t + "#highlights=" + i);
        else {
            var a = $(document).find(".name-artist h1").text().replace(/ /g, "");
            t.indexOf("toptracks=" + a) < 0 && a && (t.indexOf("#") >= 0 ? $(n).find("a").attr("href", t + "&toptracks=" + a) : $(n).find("a").attr("href", t + "#artistName=" + a))
        }
    }), $(document).find(".vf-playlist article").each(function(e, n) {
        var t = $(n).find(".thumbnail a").attr("href");
        t.indexOf("genre=" + i) < 0 && i && (t.indexOf("#") >= 0 ? $(n).find(".thumbnail a").attr("href", t + "&genre=" + i) : $(n).find(".thumbnail a").attr("href", t + "#genre=" + i))
    });
    var n = $("#listalbums").find("article"),
        t = $(document).find(".name-artist h1").text();
    n.each(function(e, i) {
        var n = $(i).find(".thumbnail a").attr("href");
        n.indexOf("album=" + t) < 0 && t && (n.indexOf("#") >= 0 ? $(i).find(".thumbnail a").attr("href", n + "&album=" + t) : $(i).find(".thumbnail a").attr("href", n + "#album=" + t))
    }), $("#listsingles").find("article").each(function(e, i) {
        var n = $(i).find(".thumbnail a").attr("href");
        n.indexOf("single=" + t) < 0 && t && (n.indexOf("#") >= 0 ? $(i).find(".thumbnail a").attr("href", n + "&single=" + t) : $(i).find(".thumbnail a").attr("href", n + "#single=" + t))
    }), $("#listplaylists").find("article").each(function(e, i) {
        var n = $(i).find(".thumbnail a").attr("href");
        n.indexOf("apeearon=" + t) < 0 && t && (n.indexOf("#") >= 0 ? $(i).find(".thumbnail a").attr("href", n + "&apeearon=" + t) : $(i).find(".thumbnail a").attr("href", n + "#apeearon=" + t))
    }), $("#listcompilations").find("article").each(function(e, i) {
        var n = $(i).find(".thumbnail a").attr("href");
        n.indexOf("compilation=" + t) < 0 && t && (n.indexOf("#") >= 0 ? $(i).find(".thumbnail a").attr("href", n + "&compilation=" + t) : $(i).find(".thumbnail a").attr("href", n + "#compilation=" + t))
    }), $("#similarartists").find("article").each(function(e, i) {
        var n = $(i).find("a").attr("href");
        n.indexOf("similar=" + t) < 0 && t && (n.indexOf("#") >= 0 ? $(i).find("a").attr("href", n + "&similar=" + t) : $(i).find("a").attr("href", n + "#similar=" + t))
    })
}

function pushGA(e, i, n, t) {
    void 0 === e || void 0 === i ? log("[" + n + "] category or action undifined") : "" == e.trim() || "" == i.trim() ? log("[" + n + "] category or action null") : void 0 === t ? ga("send", "event", e, i) : ga("send", "event", e, i, t)
}

function loadAppIOS() {
    var e = function() {
        var e = "videovn://";
        if (vf_meta && Object.keys(vf_meta).length > 0) {
            var i = vf_meta.video,
                n = vf_meta.channel,
                t = vf_meta.playlist,
                a = vf_meta.cate;
            i ? t ? Number(t.groupId) > 0 ? e += "play/group?gid=" + t.groupId + "&pid=" + t.playlistId + "&vid=" + i.videoId + "&pos=0" : e += "play/playlist?pid=" + t.playlistId + "&vid=" + i.videoId + "&pos=0" : e += "play/video?vid=" + i.videoId + "&pos=0" : n ? t ? Number(t.groupId) > 0 ? e += "show/group?gid=" + t.groupId + "&pid=" + t.playlistId : e += "show/playlist?pid=" + t.playlistId : e += "show/channel?cid=" + n.channelId : a && (QueryString().filter && "video" == QueryString().filter ? e += "show/category/video?cateid=" + a.cateId + "&pcateid=" + a.parentId : e += "show/category/playlist?cateid=" + a.cateId + "&pcateid=" + a.parentId)
        } else e += "show/home";
        return e
    }();
    ({
        launchApp: function() {
            console.log("Hey! We will go to: ", e), window.location.replace(e), this.timer = setTimeout(this.openWebApp, 1e3)
        },
        openWebApp: function() {
            window.location.replace("itms://itunes.apple.com/us/app/pages/id1081257854")
        }
    }).launchApp()
}

function loadAppIOS_221() {
    var e = "videovn://home",
        i = getplaylistId(),
        n = page_id() ? page_id() : 0;
    e = i || n ? i ? "videovn://play/playlist?pid=" + i + "&vid=" + n + "&pos=0" : "videovn://play/video?vid=" + n + "&pos=0" : "videovn://home";
    window.location = e, !document.hidden && setTimeout(function() {
        setTimeout(function() {
            alert("webkitHidden:" + document.hidden), window.document.webkitHidden || (window.location = "itms://itunes.apple.com/us/app/pages/id1081257854")
        }, 100)
    }, 600)
}

function toggleDropDown(e) {
    "none" === $(e).css("display") ? $(e).css("display", "block") : $(e).css("display", "none")
}

function logout(e, i) {
    $.ajax({
        type: "POST",
        url: "/logout",
        data: {
            type: "quick"
        },
        datatype: "json",
        timeout: 5e3
    }).success(function(n, t, a) {
        location.pathname.indexOf("/manage") >= 0 || location.pathname.indexOf("/stats") >= 0 || location.pathname.indexOf("/dashboard") >= 0 ? window.location.href = "/" : (updateLoginMenu(), stopNotificationInterval(), isLogin = !1, e && e.apply(null, i))
    }).fail(function(e, i, n) {
        log("Error: " + n)
    })
}

function startTimer() {
    return (new Date).getTime()
}

function showTimerDuration(e, i) {
    var n = (new Date).getTime() - e;
    log(i + ": " + n + " milliseconds")
}

function formatFriendlyCount(e) {
    var i = Math.floor(e / 1e5) / 10;
    return i >= 1 ? i + "M" : (i = Math.floor(e / 100) / 10, i >= 1 ? i + "K" : e)
}

function formatFriendlyTime(e) {
    var i = new Date,
        n = new Date(e),
        t = Math.round((i - n) / 1e3),
        a = Math.floor(t / 86400);
    if (0 == a) {
        t -= 86400 * a;
        var o = Math.floor(t / 3600);
        return o < 12 ? o + " giờ trước" : "Hôm nay"
    }
    var l = Math.floor(a / 365);
    if (l > 0) return l + " năm trước";
    var s = Math.floor(a / 30);
    if (s > 0) return s + " tháng trước";
    var r = Math.floor(a / 7);
    return r > 0 ? r + " tuần trước" : a + " ngày trước"
}

function formatDateFromMili(e) {
    var i = new Date(e),
        n = i.getDate();
    n < 10 && (n = "0" + n);
    var t = i.getMonth() + 1;
    t < 10 && (t = "0" + t);
    var a = i.getFullYear();
    return a < 10 && (a = "0" + a), n + "/" + t + "/" + a
}

function formatTimePlayer(e) {
    e = Math.round(e);
    var i = Math.floor(e / 3600);
    e -= 3600 * i;
    var n = Math.floor(e / 60);
    e -= 60 * n;
    var t = "";
    return i > 0 && i < 10 ? t += "0" + i + ":" : i >= 10 && (t += i + ":"), t += 0 == n ? "00:" : n < 10 ? "0" + n + ":" : n + ":", t += 0 == e ? "00" : e < 10 ? "0" + e : e
}

function Dialog() {
    function e(e) {
        return /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(e)
    }
    var i = this,
        n = $("#dialogs");
    this.show = function(e, i) {
        var t = $("#" + e);
        if (0 != t.length) {
            if (n.show(), t.bind("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend", function() {
                    t.removeClass("animated zoomIn"), "function" == typeof i && setTimeout(i, 200)
                }), t.show(), "true" == t.attr("autosize")) {
                var a = 110 + t.find(".dialog-content").height();
                console.log("dialog content:" + t.find(".dialog-content").height()), console.log(a), t.css("height", a + "px")
            }
            t.addClass("animated zoomIn")
        }
    }, this.hide = function(e, i) {
        var t = $("#" + e);
        0 != t.length && (t.bind("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend", function() {
            t.removeClass("animated zoomOut"), n.hide(), t.hide(), t.remove(), "function" == typeof finish && setTimeout(finish, 200)
        }), t.addClass("animated zoomOut"))
    }, this.open = function(e, n, a, o, l, s) {
        t(e, n, a, o, l);
        i.show(e)
    };
    var t = function(e, t, a, o, l) {
        if ($("#" + e).length > 0) return $("#" + e);
        var s = $("<div>").addClass("dialog"),
            r = "";
        return r += '<div class="dialog-header"><h1>', l && l.icon && (r += '<span class="' + l.icon + '"></span>'), r += t + "</h1>", r += '<a class="btnClose" href="javascript:Dialog.hide(\'' + e + '\')"><span class="icon-webs closeicon"></span></a>', r += "</div>", r += '<div class="dialog-content">', r += a, r += "</div>", r += '<div class="dialog-action">', o && o.default && (r += '<a class="btnDefault">', r += o.default.icon ? '<span class="' + o.default.icon + '"></span>' : "", r += o.default.label ? o.default.label : "", r += "</a>"), o && o.alternative && (r += '<a class="btnAlternative">', r += o.alternative.icon ? '<span class="' + o.alternative.icon + '"></span>' : "", r += o.alternative.label ? o.alternative.label : "", r += "</a>"), o && o.dismiss && (r += '<a class="btnCancel">', r += o.dismiss.icon ? '<span class="' + o.dismiss.icon + '"></span>' : "", r += o.dismiss.label ? o.dismiss.label : "Đóng", r += "</a>"), r += "</div>", s.append(r), s.attr("id", e), l && l.width && s.css({
            width: l.width + "px",
            "margin-left": -Math.round(l.width / 2) + "px"
        }), l && l.height ? s.css({
            height: l.height + "px",
            "margin-top": -Math.round(l.height / 2) + "px"
        }) : (s.attr("autosize", "true"), s.find(".dialog-content").css("bottom", "auto")), o && o.default && (o.default.action ? s.find(".dialog-action .btnDefault").on("click", function(e) {
            e.preventDefault(), setTimeout(o.default.action, 100)
        }) : s.find(".dialog-action .btnDefault").on("click", function(n) {
            n.preventDefault(), i.hide(e)
        })), o && o.alternative && (o.alternative.action ? s.find(".dialog-action .btnAlternative").on("click", function(e) {
            e.preventDefault(), setTimeout(o.alternative.action, 100)
        }) : s.find(".dialog-action .btnAlternative").on("click", function(n) {
            n.preventDefault(), i.hide(e)
        })), o && o.dismiss && (o.dismiss.action ? s.find(".dialog-action .btnCancel").on("click", function(e) {
            e.preventDefault(), setTimeout(o.dismiss.action, 100)
        }) : s.find(".dialog-action .btnCancel").on("click", function(n) {
            n.preventDefault(), i.hide(e)
        })), 0 == n.length && (n = $("<div>").addClass("dialog-overlay black").attr("id", "dialogs"), $("body").append(n), log("Dialogs wrapper append to html")), n.append(s), log("Dialog #" + e + " generated and append to html"), s
    };
    this.showReportDialog = function() {
        t("dialog-report", "Báo xấu", '<p>Nếu bạn nghĩ rằng nội dung video này không nên xuất hiện trên video, hãy giúp chúng tôi bằng cách gửi báo xấu về cho ban quản trị bằng cách bấm nút bên dưới hoặc gửi email về địa chỉ <a href="mailto:bqt@video.vn">bqt@video.vn</a>. Chúng tôi sẽ kiểm tra và có hành động phản hồi trong thời gian nhanh nhất có thể.</p>', {
            dismiss: {
                label: "Đóng"
            },
            alternative: {
                label: "Báo xấu video đang xem"
            }
        });
        i.show("dialog-report")
    }, this.showFeedbackPopup = function() {
        var e = $(".feedbackbtn").find("#loginemail").val(),
            n = "";
        n += '<div id="vf-feedback">', n += '<label for="username">Email</label>', n += "#email" == e || "" == e ? '<input id="userlogin" class="username" type="email" name="userlogin" placeholder="example@somewhere.com">' : '<input id="userlogin" class="username" type="email" name="userlogin" placeholder="' + e + '" disabled="true" value="' + e + '">', n += '<label id="email-validation"></label>', n += '<label for="content feedback">Nội dung</label>', n += '<textarea id="contenttxt" class="content-fb" name="contenttxt" cols="30" maxlength="1000" minlength="10" placeholder="" required></textarea>', n += '<label id="text-validation"></label>';
        t("dialog-feedback", "Góp Ý", n += '<input id="send-feedback" type="submit" name="oktxt" value="Gửi" onClick="javascript:Dialog.postFeedback();"></div>', {
            dismiss: {
                label: "Đóng"
            }
        });
        i.show("dialog-feedback")
    }, this.postFeedback = function() {
        var i = $("#dialog-feedback #userlogin.username").val(),
            n = e(i),
            t = $("#dialog-feedback #contenttxt.content-fb").val();
        if ("" != i.trim() && "" != t.trim())
            if (n) {
                var a = {
                    email: i,
                    content: t
                };
                $.ajax({
                    type: "POST",
                    url: "/email/feedback",
                    data: a,
                    datatype: "json"
                }).success(function(e, i, n) {
                    $("#dialog-feedback").find("#vf-feedback").hide(), $("#dialog-feedback").find(".dialog-content").append("<p>Thân chào bạn,</p>"), $("#dialog-feedback").find(".dialog-content").append("<p>video đã nhận được góp ý của bạn. video xin ghi nhận và sẽ ngày càng hoàn thiện để mang đến bạn những trải nghiệm tốt hơn.</p>"), $("#dialog-feedback").find(".dialog-content").append("<p>Cám ơn bạn rất nhiều!</p>")
                }).fail(function(e, i, n) {})
            } else $("#dialog-feedback #email-validation").html("Vui lòng nhập địa chỉ email hợp lệ"), $("#dialog-feedback #email-validation").css("color", "red"), "" == t.trim() && ($("#dialog-feedback #text-validation").html("Bạn nên điền vào nội dung "), $("#dialog-feedback #text-validation").css("color", "red"));
        else "" == i.trim() && ($("#dialog-feedback #email-validation").html("Bạn nên điền thông tin email"), $("#dialog-feedback #email-validation").css("color", "red")), "" == t.trim() && ($("#dialog-feedback #text-validation").html("Bạn nên điền vào nội dung "), $("#dialog-feedback #text-validation").css("color", "red"))
    }, this.showSmallLoginPopup = function(e, n) {
        $.ajax({
            type: "GET",
            contentType: "application/json; charset=utf-8",
            url: api_base + "sessioncheckvalid",
            dataType: "json",
            timeout: 5e3
        }).done(function(a, o, l) {
            isLogin = a.data.isLogin, html = '<iframe id="login-frame" src="" scrolling="no" width="600" height="400"></iframe>';
            var s = t("dialog-smalllogin", "Đăng nhập", html, {
                dismiss: {
                    label: "Đóng"
                }
            });
            s.find(".dialog-content").css("padding", "0px"), s.find(".dialog-content #login-frame").attr("src", login_url), myLoginInterval || (myLoginInterval = window.setInterval(function() {
                $.cookie("JSESSID") && (console.log("call updateLoginMenu"), i.hide("dialog-smalllogin"), updateLoginMenu(), isLogin = !0, isFunction(e) && e.apply(null, n), clearInterval(myLoginInterval), myLoginInterval = void 0, registerNotificationInterval())
            }, 100)), i.show("dialog-smalllogin")
        }).fail(function(e, i, n) {
            log("Can't not retrieve user login status!")
        })
    }, this.showLoginDialog = function() {
        if (!isLogin) {
            var e = "";
            e += '<p><label>Tên đăng nhập:</label><input id="username" type="text"/></p>', e += '<p><label>Mật khẩu:</label><input id="password" type="text"/></p>', e += '<div id="submit_loading"><div class="spinner"><div class="double-bounce1"></div><div class="double-bounce2"></div></div></div>', e += '<div id="submit_success"><p><span class="ti-check"></span><br /> Bạn đã đăng nhập thành công hãy tiếp tục trải nghiệm. </p></div>';
            var n = t("dialog-notlogin", "Đăng nhập", e += '<div id="submit_error"><p><span class="ti-face-sad"></span></p><p>Có lỗi xảy ra trong quá trình đăng nhập. Bạn vui lòng nhấn vào <a href="/login" target="_blank">đây</a> để chuyển sang trang đăng nhập.<br /></p></div>', {
                dismiss: {
                    label: "Đóng"
                },
                alternative: {
                    label: "Đăng ký thành viên",
                    action: function() {
                        window.location.href = "/register"
                    }
                },
                default: {
                    label: "Đăng nhập",
                    action: function() {
                        n.find("#username").val().trim(), n.find("#password").val().trim()
                    }
                }
            });
            return i.show("dialog-notlogin"), n.find("#submit_loading").hide(), n.find("#submit_success").hide(), void n.find("#submit_error").hide()
        }
    }, this.showUploadDialog = function() {
        if (isLogin) {
            var e = "";
            e += '<p><label>Nhập đường dẫn video bạn muốn giới thiệu:</label><input id="youtube_url" type="text" placeholder="https://www.youtube.com/watch?v=j1Pw0dr3nSI" /></p>', e += '<div id="video_data">', e += '<p class="message">Vui lòng nhập đường dẫn video youtube bạn muốn thêm ở trên</p>', e += "</div>", e += '<div id="submit_loading"><div class="spinner"><div class="double-bounce1"></div><div class="double-bounce2"></div></div></div>', e += '<div id="submit_success"><p><span class="ti-check"></span><br />Video đã tạo thành công. Video của bạn sẽ chờ duyệt trước khi được hiển thị trên trang. Chia sẻ với bạn bè sử dụng liên kết bên dưới:<br /><a href="#" target="_blank"></a></p><iframe src="" width="560" height="315"></iframe></div>';
            var n = t("dialog-upload", "Giới thiệu video", e += '<div id="submit_error"><p><span class="ti-face-sad"></span></p><p>Có lỗi xảy ra trong quá trình xử lý video. Vui lòng thử lại sau!<br /><span id="submit_error_code"></span></p></div>', {
                dismiss: {
                    label: "Đóng"
                },
                alternative: {
                    label: "Xem video của tôi",
                    action: function() {
                        window.location.href = $(".toolbox li a").attr("href")
                    }
                },
                default: {
                    label: "Thêm video",
                    icon: "ti-plus",
                    action: function() {
                        n.find(".btnDefault").hide(), n.find("#submit_loading").show();
                        var e = {
                            tag: n.find("#video_tags").val(),
                            title: n.find("#video_title").val(),
                            video_id: n.find("#video_id").val(),
                            embedcode: n.find("#video_embed").val(),
                            duration: n.find("#video_duration").val(),
                            content: n.find("#video_description").val(),
                            thumbnail: n.find("#video_thumbnail").val(),
                            user_id: $(".toolbox").attr("user-id") ? parseInt($(".toolbox").attr("user-id")) : 64
                        };
                        "" == e.title.trim() || "" == e.video_id.trim() || "" == e.embedcode.trim() || "" == e.thumbnail.trim() ? (n.find(".btnDefault").show(), n.find("#submit_loading").hide()) : $.ajax({
                            type: "POST",
                            url: "/manage/importyoutube",
                            data: e,
                            datatype: "json",
                            timeout: 5e3
                        }).success(function(e, i, t) {
                            if (console.log(e), 0 == e.err) n.addClass("dialog-uploadSuccess"), n.css("height", "280px"), n.find("#submit_loading").hide(), n.find(".btnAlternative").show(), n.find(".btnAlternative").click(function() {
                                window.open("//" + window.location.host + "/_video" + e.data + ".html", "_blank")
                            }), n.find("#submit_success a").attr("href", "//" + window.location.host + "/_video" + e.data + ".html").text(window.location.protocol + "//" + window.location.host + "/_video" + e.data + ".html"), n.find("#submit_success").show();
                            else {
                                var a = "Lỗi hệ thống hãy liên hệ với quản trị viên.";
                                switch (parseInt(e.err)) {
                                    case -119:
                                        a = "Video này đã tồn tại, vui lòng xem lại danh sách video của bạn.";
                                        break;
                                    case -3:
                                        a = "Có thể bạn chưa đăng nhập, hoặc điền thiếu thông tin cho video.";
                                        break;
                                    case -122:
                                        a = "Vui lòng đăng nhập để sử dụng tính năng này.";
                                        break;
                                    default:
                                        a = "Lỗi hệ thống hãy liên hệ với quản trị viên."
                                }
                                n.find("#submit_loading").hide(), n.find("#submit_error_code").text("(Lỗi: " + a + ")"), n.find("#submit_error_code").css("color", "red"), n.find("#submit_error").show(), n.find(".btnDefault").hide()
                            }
                        }).fail(function(e, i, t) {
                            n.find(".btnDefault").show();
                            n.find("#submit_loading").hide(), n.find("#submit_error_code").text("(Lỗi: Không nhận được phản hồi từ Youtube, hãy kiểm tra lại kết nối.)"), n.find("#submit_error_code").css("color", "red"), n.find("#submit_error").show(), n.find(".btnDefault").hide()
                        })
                    }
                }
            }, {
                icon: "ti-video-camera",
                width: 600,
                height: 460
            });
            n.find(".btnAlternative").hide();
            var o;
            n.find("#youtube_url").on("keyup", function() {
                var e = $(this).val();
                "" != e.trim() ? (clearTimeout(o), o = a(e, n)) : n.find("#video_data").html('<p class="message">Vui lòng nhập đường dẫn video youtube bạn muốn thêm ở trên</p>')
            }), i.show("dialog-upload")
        } else {
            t("dialog-notlogin", "Bạn chưa đăng nhập", "<p>Bạn chưa đăng nhập. Trở thành thành viên của video.vn để cùng chia sẻ những video hay nhất với cộng đồng!</p>", {
                dismiss: {
                    label: "Đóng"
                },
                alternative: {
                    label: "Đăng ký thành viên",
                    action: function() {
                        window.location.href = "/register"
                    }
                },
                default: {
                    label: "Đăng nhập",
                    action: function() {
                        window.location.href = "/login"
                    }
                }
            });
            i.show("dialog-notlogin")
        }
    };
    var a = function(e, i) {
        return setTimeout(function() {
            i.find("#video_data").html('<div class="loading"><div class="spinner"><div class="double-bounce1"></div><div class="double-bounce2"></div></div></div>'), Youtube.fetchVideoDetail(e, function(e, n) {
                if (void 0 != e && e < 0) return i.find(".btnDefault").show(), i.find("#submit_loading").hide(), i.find("#submit_error_code").text("(Lỗi: " + n + ")"), i.find("#submit_error_code").css("color", "red"), i.find("#submit_error").show(), void i.find(".btnDefault").hide();
                var t = "";
                t += '<p class="video_thumb_preview" style="background-image:url(' + n.thumbnail + ')"></p>', t += '<div class="video_meta">', t += '<p><input type="text" id="video_title" placeholder="Tiêu đề video" value="' + n.title + '" /></p>', t += '<p><input type="text" id="video_tags" placeholder="Từ khóa mô tả ngăn cách bằng dấu phẩy" /></p>', t += '<p class="category">', t += '<input type="hidden" disabled id="video_duration" name="video_duration" value="' + n.duration + '"/>', t += '<p><span class="dangerMessage" style="display: none;">Hãy chọn một chuyên mục cụ thể cho video này.</span></p>', t += "</p>", t += "</div>", t += '<p><textarea id="video_description" placeholder="Mô tả nội dung video...">' + n.content + "</textarea></p>", t += '<input type="hidden" id="video_id" value="' + n.video_id + '"/>', t += '<input type="hidden" id="video_embed" value="' + n.embedcode + '"/>', t += '<input type="hidden" id="video_thumbnail" value="' + n.thumbnail + '"/>', i.find("#video_data").html(t)
            })
        }, 300)
    };
    this.showEmbedDialog = function() {
        var e = "";
        e += '<p><label for="embed_code">Sao chép đoạn code bên dưới để nhúng video này vào trang web của bạn:</label>', e += '<input id="embed_code" type="text" value=\'<iframe allowfullscreen="true" webkitallowfullscreen="true" mozallowfullscreen="true" src="//' + window.location.host + "/embed/" + page_id() + '?recommendation=1" width="560" height="315"></iframe>\' />', e += "</p>", e += '<iframe allowfullscreen="true" webkitallowfullscreen="true" mozallowfullscreen="true" id="embed_preview" src="//' + window.location.host + "/embed/" + page_id() + '"></iframe>', e += '<div class="options">', e += '<p><strong>Kích thước embed: </strong><label><input type="radio" value="large" class="embed_size_large" name="embed_size" /> Lớn (640x360)</label><label><input type="radio" value="medium" class="embed_size_medium" name="embed_size" checked /> Vừa (560x315)</label><label><input type="radio" value="small" class="embed_size_small" name="embed_size" /> Vừa (360x242)</label></p>', e += '<p><strong>Tùy chọn: </strong><label><input type="checkbox" class="embed_autoplay" /> Tự động play</label><label><input type="checkbox" class="embed_recommend" checked /> Gợi ý sau khi kết thúc</label><label><input type="checkbox" class="embed_quality"  /> Chất lượng cao (nếu có)</label></p>';
        var n = t("dialog-embed", "Mã nhúng video", e += "</div>", {
            alternative: {
                label: "Cám ơn"
            }
        }, {
            icon: "ti-shortcode",
            width: 600,
            height: 460
        });
        n.find('input[type="radio"], input[type="checkbox"]').on("change", function() {
            var e = "";
            e = $("input.embed_size_medium").is(":checked") ? 'width="560" height="315"' : $("input.embed_size_small").is(":checked") ? 'width="360" height="242"' : 'width="640" height="360"';
            var i = "?";
            $("input.embed_autoplay").is(":checked") && (i += "autoplay=1&"), $("input.embed_recommend").is(":checked") && (i += "recommendation=1&"), $("input.embed_quality").is(":checked") && (i += "hd=1");
            var t = "//" + window.location.host + "/embed/" + page_id() + i;
            n.find("#embed_code").val('<iframe allowfullscreen="true" webkitallowfullscreen="true" mozallowfullscreen="true" src="' + t + '" ' + e + "></iframe>"), n.find("#embed_preview").attr("src", t)
        }), i.show("dialog-embed")
    }
}

function Application() {
    this.init = function() {
        e()
    }, this.initSearchMobile = function() {
        $(".searchform");
        var e = $(".searchform #searchinput");
        $(".searchform .resultsearch");
        $(".bgsearch").hide(), $(".headerTop .searchicon").click(function() {
            $(".searchform").show(), $("#searchinput").focus()
        }), $(".searchform .deletebt").click(function() {
            e.val(""), $(".searchform .resultsearch .showresult ul").empty(), $(".searchform .resultsearch").css("display", "none")
        })
    };
    var e = function() {
        var e = $("#header form.search"),
            i = $('#header form.search input[type="text"]');
        $("#header form.search #preview");
        i.on("focus", function(i) {
            e.addClass("focused")
        }).on("blur", function() {
            setTimeout(function() {
                e.removeClass("focused")
            }, 200)
        }).keyup(function(e) {
            27 == e.which && ($(this).blur(), $(this).val(""))
        });
        var n = window.location.href.match(/\/(search)*\?(s|q)=([^&]+)/i);
        if (n && void 0 !== n[3] && "" != n[3].trim()) $("#results-video").find(".video").length
    }
}

function Youtube() {
    var e = this;
    this.getVideoId = function(e) {
        var i;
        return e.search("watch=") ? (i = e.match(/youtube\.com\/watch\?.*v=([^&]+)/i), i ? i[1] : null) : e.search("/embed/") ? (i = e.match(/youtube.com\/embed\/([^?]+)/i), i ? i[1] : null) : e.search("youtu.be") ? (i = e.match(/youtu.be\/([^?]+)/i), i ? i[1] : null) : null
    }, this.searchVideo = function(e, n, t) {
        if (e && "" != e.trim()) {
            var a = 50;
            n && n.max_results && n.max_results < 50 && (a = n.max_results);
            var o = "https://www.googleapis.com/youtube/v3/search?key=AIzaSyBG1CAz5BcBkV-rRxuZ1ETrk6c2WU3ASUQ&part=snippet&order=relevance&type=video&videoSyndicated=true&maxResults=" + a;
            o += "&q=" + e, void 0 === debug_mode && (o += " -dâm -18+ -18%20+ -sex -jav"), o += "&safesearch=strict", $.ajax({
                url: o,
                type: "GET",
                dataType: "json"
            }).success(function(e, n, a) {
                var o = [];
                if (e.items)
                    for (var l = 0; l < e.items.length; l++) o.push(i(e.items[l]));
                t(null, o)
            }).fail(function(e, i, n) {
                t("Error fetching video from youtube: " + i)
            }).always(function() {})
        } else t("No keyword provided!")
    }, this.fetchVideoDetail = function(n, t) {
        var a;
        (a = n.search("//") >= 0 ? e.getVideoId(n) : n) ? $.ajax({
            type: "GET",
            url: "https://www.googleapis.com/youtube/v3/videos?key=AIzaSyBG1CAz5BcBkV-rRxuZ1ETrk6c2WU3ASUQ&part=snippet,contentDetails,statistics,topicDetails,status&id=" + a,
            dataType: "json",
            timeout: 5e3
        }).success(function(e, n, a) {
            var o = {};
            if (e.items && e.items.length > 0) {
                var l = e.items[0];
                1 != l.status.embeddable ? t((o = {
                    error: -3,
                    message: "Video này vi phạm quyền bảo mật và riêng tư, mời bạn chọn một video khác!"
                }).error, o.message) : "private" == l.status.privacyStatus ? t((o = {
                    error: -3,
                    message: "Video này vi phạm quyền bảo mật và riêng tư, mời bạn chọn một video khác!"
                }).error, o.message) : void 0 != e.items[0].contentDetails.regionRestriction && void 0 != e.items[0].contentDetails.regionRestriction.blocked && e.items[0].contentDetails.regionRestriction.blocked.length > 0 ? t((o = {
                    error: -3,
                    message: "Video này vi phạm quyền bảo mật và riêng tư, mời bạn chọn một video khác!"
                }).error, o.message) : t(null, i(e.items[0]))
            } else log(e), t((o = {
                error: -1,
                message: "Không tìm thấy Video bạn muốn import!"
            }).error, o.message)
        }).fail(function(e, i, n) {
            "function" == typeof t && (resData = {
                error: -2,
                message: "Không lấy được thông tin Video từ Youtube vui lòng thử lại sau!"
            }, t(resData.error, resData.message))
        }): "function" == typeof t && t("URL is not supported!")
    };
    var i = function(e) {
        var i = {};
        if (e.id && e.id.videoId) i.video_id = e.id.videoId;
        else {
            if (!e.id) return;
            i.video_id = e.id
        }
        return i.title = e.snippet.title, i.embedcode = "https://www.youtube.com/embed/" + i.video_id, i.content = e.snippet.description, i.publishedAt = formatYoutubePublishTime(e.snippet.publishedAt), i.internalUrl = "/" + i.title.replace(/[^\w\d\s]/gi, ""), i.internalUrl += "_youtube" + i.video_id + ".html", i.tags = e.snippet.tags, e.statistics && (i.viewCount = parseInt(e.statistics.viewCount), i.favouriteCount = parseInt(e.statistics.favoriteCount), i.likeCount = parseInt(e.statistics.likeCount)), e.snippet.channelId && (i.channelId = e.snippet.channelId), e.contentDetails && e.contentDetails.duration && (i.duration = calculateYoutubeDuration(e.contentDetails.duration)), e.snippet.thumbnails.maxres ? i.thumbnail = e.snippet.thumbnails.maxres.url : e.snippet.thumbnails.standard ? i.thumbnail = e.snippet.thumbnails.standard.url : e.snippet.thumbnails.high ? i.thumbnail = e.snippet.thumbnails.high.url : e.snippet.thumbnails.medium ? i.thumbnail = e.snippet.thumbnails.medium.url : e.snippet.thumbnails.default && (i.thumbnail = e.snippet.thumbnails.default.url), i
    };
    this.fetchChannelVideo = function(e, n, t) {
        var a = "https://www.googleapis.com/youtube/v3/search?key=AIzaSyBG1CAz5BcBkV-rRxuZ1ETrk6c2WU3ASUQ&part=snippet&maxResults=" + (n && n.max_results ? parseInt(n.max_results) : 50) + "&order=date&type=video&channelId=" + e + "&videoSyndicated=true&safesearch=strict";
        $.ajax({
            url: a,
            type: "GET",
            dataType: "json"
        }).success(function(e, n, a) {
            var o = [];
            if (e.items)
                for (var l = 0; l < e.items.length; l++) o.push(i(e.items[l]));
            t(null, o)
        }).fail(function(e, i, n) {
            log(n), t("Error fetching channel video: " + i)
        })
    }
}

function displayFollowBox(e, i) {
    $.ajax({
        url: "/channelInfo/getSubscribeInfo?channelId=" + i,
        dataType: "json",
        success: function(i) {
            var n = $(".btnFollow-" + e);
            0 == i.err && (i.data.channelOwner ? displayStateOwner(n, e) : i.data.subscribed ? displayStateActive(n, e) : displayStateDeactive(n, e))
        }
    })
}

function displayFollowPlaylist(e, i) {
    $.ajax({
        url: "/playlist/getSubscribeInfo?playlist_id=" + i,
        dataType: "json",
        success: function(i) {
            0 == i.err && (i.data ? $(e).addClass("active") : $(e).removeClass("active"))
        }
    })
}

function displayFollowArtist(e, i) {
    $.ajax({
        url: "/artist/getSubscribeInfo?artistid=" + i,
        dataType: "json",
        success: function(i) {
            0 == i.err && (i.data ? $(e).addClass("active") : $(e).removeClass("active"))
        }
    })
}

function subscribeChannel(e, i) {
    $.ajax({
        url: "/channelInfo/subscribe?channel=" + i + "&action=" + e
    })
}

function subscribePlaylist(e, i) {
    $.ajax({
        url: "/playlist/subscribe?playlist_id=" + i + "&action=" + e
    })
}

function subscribeArtist(e, i) {
    $.ajax({
        url: "/artist/subscribe?artistid=" + i + "&action=" + e
    })
}

function doSubscribePlaylist(e, i) {
    $(e).hasClass("active") ? ($(e).removeClass("active"), subscribePlaylist("unsubscribe", i)) : ($(e).addClass("active"), subscribePlaylist("subscribe", i))
}

function doSubscribeArtist(e, i) {
    console.log("* doSubscribeArtist, artistId=", i), $(e).hasClass("active") ? ($(e).removeClass("active"), subscribeArtist("unsubscribe", i)) : ($(e).addClass("active"), subscribeArtist("subscribe", i))
}

function displayStateDeactive(e, i) {
    $(e).removeClass("active"), $("span.iconFladd-" + i).css("display", "inline"), $("span.vf-iconFladd-" + i).css("display", "inline"), $("span.iconFldone-" + i).css("display", "none"), $("span.vf-iconFldone-" + i).css("display", "none"), $("span.iconmyaccount-" + i).css("display", "none"), $("span.vf-iconmyaccount-" + i).css("display", "none"), $(".following-" + i).css("display", "none"), $(".follow-" + i).css("display", "inline")
}

function displayStateActive(e, i) {
    $(e).addClass("active"), $("span.iconFldone-" + i).css("display", "inline"), $("span.vf-iconFldone-" + i).css("display", "inline"), $("span.iconFladd-" + i).css("display", "none"), $("span.vf-iconFladd-" + i).css("display", "none"), $("span.iconmyaccount-" + i).css("display", "none"), $("span.vf-iconmyaccount-" + i).css("display", "none"), $(".following-" + i).css("display", "inline"), $(".follow-" + i).css("display", "none"), $(".btnFollow-" + i + " .activity").removeClass("activityfl"), setTimeout(function() {
        $(".btnFollow-" + i + " .activity").addClass("activityfl")
    }, 1500)
}

function displayStateOwner(e, i) {
    var n = $(e).parents("div.followChanel");
    $(e).removeClass("active"), $("span.iconmyaccount-" + i).css("display", "inline"), $("span.vf-iconmyaccount-" + i).css("display", "inline"), $("span.iconFldone-" + i).css("display", "none"), $("span.vf-iconFldone-" + i).css("display", "none"), $("span.iconFladd-" + i).css("display", "none"), $("span.vf-iconFladd-" + i).css("display", "none"), $(".follow-" + i).css("display", "none"), $(".following-" + i).css("display", "inline"), n.hasClass("btnmyaccount") || n.addClass("btnmyaccount")
}

function doSubscribeChannel(e, i, n) {
    var t = $(".totalFollow-" + i);
    $(e).hasClass("active") ? (displayStateDeactive(e, i), $("span.disfollow-" + i).css("display", "none"), $("span.vf-iconFlclear-" + i).css("display", "none"), t.html(parseInt(t[0].innerHTML) - 1), subscribeChannel("unsubscribe", n)) : $(e).parents("div.followChanel").hasClass("btnmyaccount") || (displayStateActive(e, i), t.html(parseInt(t[0].innerHTML) + 1), subscribeChannel("subscribe", n))
}

function hoverInSubscribeChannel(e) {
    "inline" == $("span.following-" + e).css("display") && ($("span.following-" + e).css("display", "none"), $("span.vf-iconFldone-" + e).css("display", "none"), $("span.disfollow-" + e).css("display", "inline"), $("span.vf-iconFlclear-" + e).css("display", "inline"))
}

function hoverOutSubscribeChannel(e) {
    "inline" == $("span.disfollow-" + e).css("display") && ($("span.disfollow-" + e).css("display", "none"), $("span.vf-iconFlclear-" + e).css("display", "none"), $("span.following-" + e).css("display", "inline"), $("span.vf-iconFldone-" + e).css("display", "inline"))
}

function formatDateHourMinuteFromMili(e) {
    var i = new Date(e),
        n = i.getHours();
    n < 10 && (n = "0" + n);
    var t = i.getMinutes();
    t < 10 && (t = "0" + t);
    var a = i.getDate();
    a < 10 && (a = "0" + a);
    var o = i.getMonth() + 1;
    o < 10 && (o = "0" + o);
    var l = i.getFullYear();
    return l < 10 && (l = "0" + l), a + "/" + o + "/" + l + " " + n + ":" + t
}
var api_base = "undefined" != typeof CONFIG && CONFIG.API_BASE ? CONFIG.API_BASE + "api/" : "//" + window.location.host + "/api/ ",
    login_url = "undefined" != typeof CONFIG && CONFIG.API_BASE ? "https:" + CONFIG.API_BASE + "login?type=small" : "https://" + window.location.host + "/login?type=small",
    isLogin = !1,
    myLoginInterval, loginWindow, notificationInterval, hasMore = !0,
    waypoint, DEVICE = {
        platform: "unknown",
        name: "unknown",
        type: "unknown",
        screen: document.body.clientWidth,
        browser: "unknown"
    },
    userAgent = navigator.userAgent.toLowerCase();
moment.locale("vi"), String.prototype.startsWith || (String.prototype.startsWith = function(e, i) {
    return i = i || 0, this.indexOf(e, i) === i
});
var QueryString = function() {
        for (var e = {}, i = window.location.search.substring(1).split("&"), n = 0; n < i.length; n++) {
            var t = i[n].split("=");
            if (void 0 === e[t[0]]) e[t[0]] = decodeURIComponent(t[1]);
            else if ("string" == typeof e[t[0]]) {
                var a = [e[t[0]], decodeURIComponent(t[1])];
                e[t[0]] = a
            } else e[t[0]].push(decodeURIComponent(t[1]))
        }
        return e
    },
    documentTimer = startTimer(),
    debug_mode = !0,
    Dialog = new Dialog,
    App = new Application,
    Youtube = new Youtube,
    loadAppAndroid = function() {
        var e = (new Date).valueOf();
        $("body").append('<iframe style="width:1px;height:1px;position:fixed;top:0;left:0;" src="videovn://video.vn"></iframe>'), setTimeout(function() {
            var i = (new Date).valueOf() - e;
            console.log("diff time:", i), 3050 > i && (document.location = "https://play.google.com/store/apps/details?id=vn.com.video.video")
        }, 3e3)
    },
    closeBannerAndroid = function() {
        $.cookie("banner-android", 1, {
            expires: 7
        }), $("#vf-appstore").hide()
    },
    buildBannerAndroid = function() {
        if (1 != $.cookie("banner-android")) {
            var e = getplaylistId(),
                i = page_id(),
                n = "",
                t = '<div id="vf-appstore" class="app-adroid"><div class="banner_app"><div class="first_line"><div class="logo"></div><div class="logo_vf"></div><div class="text_zone">Trải nghiệm tốt hơn trên app video</div><div class="logo_ggstore"></div></div><div class="right_zone"><a href="#" class="close-app" onclick="closeBannerAndroid()"></a><a id="android_banner_open" href="' + ("intent://#Intent;" + (n = e || i ? e ? "scheme=videovn://play/playlist?pid=" + e + "&vidx=0&pos=0;" : "scheme=videovn://play/video?vid=" + i + "&amp;pos=0;" : "scheme=videovn://video.vn;") + "package=vn.com.video.video;end") + '" class="open-app"></a></div></div></div>';
            $("body").prepend(t)
        }
    },
    closeBannerIOS = function() {
        $.cookie("banner-ios", 1, {
            expires: 7
        }), $("#vf-appstore").hide()
    },
    buildBannerIOS = function() {
        if (1 != $.cookie("banner-ios")) {
            $("body").prepend('<div id="vf-appstore" class="app-adroid app-ios"><div class="banner_app"><div class="first_line"><div class="logo"></div><div class="logo_vf"></div><div class="text_zone">Trải nghiệm tốt hơn trên app video</div><div class="logo_iosstore"></div></div><div class="right_zone"><a href="#" class="close-app" onclick="closeBannerIOS()"></a><a id="android_banner_open" class="open-app" onclick="loadAppIOS()"></a></div></div></div>')
        }
    };
$(document).on("ready", function() {
    App.init(), /(Android)/g.test(navigator.userAgent) && buildBannerAndroid(), /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream && buildBannerIOS(), userAgent.indexOf("ipad") > -1 ? (DEVICE.platform = "ios", DEVICE.name = "ipad", DEVICE.type = "tablet") : userAgent.indexOf("iphone") > -1 ? (DEVICE.platform = "ios", DEVICE.name = "iphone", DEVICE.type = "smartphone") : userAgent.indexOf("android") > -1 ? (DEVICE.platform = "android", DEVICE.type = userAgent.indexOf("mobile") > -1 ? "smartphone" : "tablet") : userAgent.indexOf("windows phone") > -1 ? (DEVICE.platform = "windows", DEVICE.type = "smartphone") : DEVICE.type = "desktop", userAgent.indexOf("chrome") > -1 ? DEVICE.browser = "chrome" : userAgent.indexOf("firefox") > -1 ? DEVICE.browser = "firefox" : userAgent.indexOf("msie") > -1 ? DEVICE.browser = "ie" : userAgent.indexOf("safari") > -1 && userAgent.indexOf("chrome") < 0 && (DEVICE.browser = "safari"), setupAnalytics(), $("#embedbtn").on("click", function(e) {
        e.preventDefault(), Dialog.showEmbedDialog()
    }), showTimerDuration(documentTimer, "Document Ready"), isLogin = !!$.cookie("JSESSID"), updateLoginMenu(), $(document).mouseup(function(e) {
        var i = $("#notifyfeedBox");
        checkAndHide(i, e.target, $(".newNotifi")), $("#notifyfeedBox").is(":hidden") && $("#ascrail2000").hide()
    });
    var e;
    e || (e = window.setInterval(function() {
        isLogin && (clearInterval(e), e = void 0, registerNotificationInterval())
    }, 100))
});
var isFunction = function(e) {
    var i = {};
    return e && "[object Function]" === i.toString.call(e)
};
$("html").click(function(e) {
    "avatarDropDown" !== e.target.parentElement.id && "loginDropdown" !== e.target.parentElement.id && "loginDropdown" !== e.target.id && $("#loginDropdown").css("display", "none"), "none" !== $("#preview").css("display") && $("#preview").css("display", "none")
});
var updateLoginMenu = function() {
        "" != window.location.hostname && ($("#header .right-header") && $("#header .right-header").remove(), $.ajax({
            type: "GET",
            contentType: "application/json; charset=utf-8",
            url: api_base + "loginstatus",
            dataType: "json",
            timeout: 5e3
        }).done(function(e, i, n) {
            if ("smartphone" == DEVICE.type || "tablet" == DEVICE.type) $(".headerMenu .infoOther ul").empty().append(e.data.header_html), $(".headerMenu #logoutbt").length > 0 ? $(".headerMenu #logoutbt").remove() : $(".headerMenu #navigation").after(e.data.user_menu_html);
            else {
                $("#header .headerTop .container form.search").after(e.data.header_html + e.data.user_menu_html);
                var t = $("#header").find(".toolbox img");
                "" == t.attr("src") && t.attr("src", CONFIG.BASE_STATIC + "/css/image/bg_no-user-avatar.png")
            }
            "boolean" == typeof e.data.isLogin && (isLogin = e.data.isLogin), $(document).foundation()
        }).fail(function(e, i, n) {
            log("Can't not retrieve user login status!")
        }))
    },
    registerNotificationInterval = function() {
        notificationInterval = window.setInterval(function() {
            getNotificationItems()
        }, 15e3)
    },
    stopNotificationInterval = function() {
        clearInterval(notificationInterval), notificationInterval = void 0
    },
    resetNotificationCounter = function() {
        var e = $(".newNotifi .notififeed .totalNewnotifi");
        e.html(""), e.hide(), $.ajax({
            url: "/notification/resetcounter"
        })
    },
    resetFeedCounter = function() {
        var e = $(".newWatchs .watchshow .totalNewwatchs");
        e.html(""), e.hide(), $.ajax({
            url: "/videoFeed/resetcounter"
        })
    },
    preloadFirstNotificationItems = function() {
        getNotificationItems(0, 7, function() {
            $(".arrowbox ul").niceScroll({
                touchbehavior: !1,
                horizrailenabled: !1,
                scrollspeed: "200",
                cursorcolor: "#d7d7d7",
                cursoropacitymax: .7,
                cursorwidth: 6,
                cursorborder: "none",
                cursorborderradius: "16px",
                background: "#ebebeb",
                autohidemode: !1
            }), changeDisplayTimestamp(), resetNotificationCounter()
        })
    },
    getNotificationItems = function(e, i, n) {
        $.ajax({
            url: "/pull/notification/getNotification",
            type: "POST",
            datatype: "json",
            data: {
                start: e,
                count: i
            },
            success: function(i) {
                var t = i.data.notificationCounter,
                    a = $(".newWatchs .watchshow .totalNewwatchs");
                if (0 == i.err && i.data.appendedItems && (t > 0 || 0 == e)) {
                    var o = $(".newNotifi .notififeed .totalNewnotifi"),
                        l = $("#notifyfeedBox .arrowbox ul .mCSB_container"),
                        s = 0 == l.length ? $("#notifyfeedBox .arrowbox ul") : l;
                    t > 0 && (o.html(t), o.show()), (t > 0 && s.children().length > 1 || 0 == e) && (i.data.lastItem && $(".newNotifi #notifyfeedBox .arrowbox #lastItem").html(i.data.lastItem), s.prepend(i.data.appendedItems), "function" == typeof n && n.apply(void 0, [])), $("#notifyfeedBox .arrowbox .noInfo").hide()
                } else 0 != i.err || i.data.appendedItems || 0 != e || $("#notifyfeedBox .arrowbox .noInfo").show();
                i && i.data && i.data.feedCounter > 0 && (a.html(i.data.feedCounter > 20 ? "20+" : "" + i.data.feedCounter), a.show())
            },
            error: function(e) {}
        })
    },
    openBoxAndPreloadFirstItems = function() {
        var e = $("#notifyfeedBox .arrowbox ul");
        toggleDropDown("#notifyfeedBox"), $("#notifyfeedBox").is(":hidden") || (1 == e.children().length && "loading" == e.children().first().attr("id") && (e.children().first().hide(), preloadFirstNotificationItems()), changeDisplayTimestamp(), resetNotificationCounter(), $("#ascrail2000").show())
    },
    loadMore = function() {
        var e = $(".newNotifi #notifyfeedBox .arrowbox #lastItem"),
            i = e.html(),
            n = $("#notifyfeedBox .arrowbox ul #loading");
        hasMore && "-1" != i && (n.show(), $.ajax({
            url: "/pull/notification/loadmore",
            type: "POST",
            datatype: "json",
            data: {
                fromId: i,
                count: 5
            },
            success: function(i) {
                if (0 == i.err && i.data.appendedItems) {
                    var t = $("#notifyfeedBox .arrowbox ul .mCSB_container");
                    (0 == t.length ? $("#notifyfeedBox .arrowbox ul") : t).append(i.data.appendedItems), e.html(i.data.lastId)
                } else i.data.lastId || (hasMore = !1);
                n.hide(), changeDisplayTimestamp()
            },
            error: function(e) {}
        }))
    },
    changeDisplayTimestamp = function() {
        var e = $("#notifyfeedBox .arrowbox #feedContainer"),
            i = $("#notifyfeedBox .arrowbox #feedContainer .mCustomScrollBox .mCSB_container");
        (void 0 !== i ? i : e).children("li").each(function() {
            var e = $(this).find(".video .meta .timeago_ts")[0].innerHTML,
                i = $(this).find(".video .meta .timeago")[0];
            e && (i.innerHTML = moment(e, "x").fromNow())
        })
    };
!Function.prototype.bind || "object" != typeof console && "function" != typeof console || "object" != typeof console.log || ["log", "info", "warn", "error", "assert", "dir", "clear", "profile", "profileEnd"].forEach(function(e) {
    console[e] = this.call(console[e], console)
}, Function.prototype.bind), window.log || (window.log = function() {
    if (void 0 !== debug_mode && !0 === debug_mode)
        if (log.history = log.history || [], log.history.push(arguments), "undefined" != typeof console && "function" == typeof console.log)
            if (window.opera)
                for (var e = 0; e < arguments.length;) console.log("Item " + (e + 1) + ": " + arguments[e]), e++;
            else 1 == Array.prototype.slice.call(arguments).length && "string" == typeof Array.prototype.slice.call(arguments)[0] ? console.log(Array.prototype.slice.call(arguments).toString()) : console.log(Array.prototype.slice.call(arguments));
    else if (Function.prototype.bind || "undefined" == typeof console || "object" != typeof console.log)
        if (document.getElementById("firebug-lite")) setTimeout(function() {
            log(Array.prototype.slice.call(arguments))
        }, 500);
        else {
            var i = document.createElement("script");
            i.type = "text/javascript", i.id = "firebug-lite", i.src = "https://getfirebug.com/firebug-lite.js", document.getElementsByTagName("HEAD")[0].appendChild(i), setTimeout(function() {
                log(Array.prototype.slice.call(arguments))
            }, 2e3)
        } else Function.prototype.call.call(console.log, console, Array.prototype.slice.call(arguments))
});
var page_id = function() {
        page_url = window.location.href;
        var e = page_url.match(/_video(\d+)\.html/i);
        if (e && 2 == e.length) return e[1];
        var i = page_url.match(/_youtube([^.]+)\.html/i);
        return i ? i[1] : null
    },
    getplaylistId = function() {
        if (QueryString().playlist) return QueryString().playlist;
        page_url = window.location.href;
        var e = page_url.match(/_playlist(\d+)\.html/i);
        return e && 2 == e.length ? e[1] : void 0
    };
! function(e) {
    e.fn.offsetRelative = function(i) {
        var n = e(this),
            t = n.offsetParent(),
            a = n.position();
        if (i) {
            if ("BODY" == t.get(0).tagName) return a;
            if (e(i, t).length) return a;
            if (t[0] == e(i)[0]) return a;
            var o = t.offsetRelative(i);
            return a.top += o.top, a.left += o.left, a
        }
        return a
    }, e.fn.reverseChildren = function() {
        return this.each(function() {
            var i = e(this);
            i.children().each(function() {
                i.prepend(this)
            })
        })
    }, e.fn.positionRelative = function(i) {
        return e(this).offsetRelative(i)
    }
}(jQuery);
var checkAndHide = function(e, i, n) {
        e.is(i) || 0 !== e.has(i).length || void 0 !== n && 0 !== n.has(i).length || e.hide()
    },
    checkAndHideShowMore = function(e) {
        var i = $(e + " .description .video-desc"),
            n = $(e + " .viewMore");
        i[0].scrollHeight > i[0].offsetHeight ? (n.css("display", "block"), i.css("max-height", "110px")) : n.css("display", "none")
    },
    truncatePlaylistDescBlock = function() {
        $("p.desc-intro").dotdotdot({
            ellipsis: "..."
        })
    },
    loadMoreVideosForChannel = function(e, i, n, t, a, o, l) {
        $.ajax({
            url: "/channel/" + t + "/" + a + "?loadmore=" + i + "&order=" + o,
            success: function(i) {
                $("." + e).append(i), void 0 !== l && l.refreshAll(), $("#xem-them #container-loading").css("display", "none"), $("." + e + " article").length == n && $("#xem-them").remove()
            }
        })
    },
    loadMoreItemsForChannel = function(e, i, n, t) {
        $.ajax({
            url: i,
            success: function(i) {
                e.append(i), void 0 !== t && t.refreshAll(), $("#xem-them #container-loading").css("display", "none"), e.find("article").length == n && $("#xem-them").remove()
            }
        })
    },
    displayMobileLoginPopup = function() {
        $.fancybox({
            content: $("#forgotLoginbox"),
            closeClick: !0,
            openEffect: "none",
            closeEffect: "none",
            helpers: {
                overlay: {
                    closeClick: !0
                }
            }
        })
    },
    loadMoreFollowedPlaylist = function(e, i) {
        var n = $(".vf-following-playlist ul.bxslider li article").length,
            t = n + 12;
        n > 0 && $.ajax({
            url: "/subcribedplaylist/list?start=" + n + "&end=" + t,
            success: function(t) {
                null != t && t.trim().length > 0 ? ($(".vf-following-playlist ul").append(t), $(".vf-following-playlist ul.bxslider li article").length - n < 12 ? (configSlider.infiniteLoop = !0, configSlider.onSlideNext = function() {}, e.reloadSlider(configSlider)) : e.reloadSlider(), e.goToSlide(i)) : (configSlider.onSlideNext = function() {}, e.reloadSlider(configSlider), e.goToSlide(i))
            }
        })
    };